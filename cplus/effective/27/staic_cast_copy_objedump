
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000400538 <_init>:
  400538:	48 83 ec 08          	sub    $0x8,%rsp
  40053c:	48 8b 05 b5 0a 20 00 	mov    0x200ab5(%rip),%rax        # 600ff8 <_DYNAMIC+0x1e0>
  400543:	48 85 c0             	test   %rax,%rax
  400546:	74 05                	je     40054d <_init+0x15>
  400548:	e8 23 00 00 00       	callq  400570 <__gmon_start__@plt>
  40054d:	48 83 c4 08          	add    $0x8,%rsp
  400551:	c3                   	retq   

Disassembly of section .plt:

0000000000400560 <__gmon_start__@plt-0x10>:
  400560:	ff 35 a2 0a 20 00    	pushq  0x200aa2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400566:	ff 25 a4 0a 20 00    	jmpq   *0x200aa4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40056c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400570 <__gmon_start__@plt>:
  400570:	ff 25 a2 0a 20 00    	jmpq   *0x200aa2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400576:	68 00 00 00 00       	pushq  $0x0
  40057b:	e9 e0 ff ff ff       	jmpq   400560 <_init+0x28>

0000000000400580 <__libc_start_main@plt>:
  400580:	ff 25 9a 0a 20 00    	jmpq   *0x200a9a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400586:	68 01 00 00 00       	pushq  $0x1
  40058b:	e9 d0 ff ff ff       	jmpq   400560 <_init+0x28>

Disassembly of section .text:

0000000000400590 <_start>:
  400590:	31 ed                	xor    %ebp,%ebp
  400592:	49 89 d1             	mov    %rdx,%r9
  400595:	5e                   	pop    %rsi
  400596:	48 89 e2             	mov    %rsp,%rdx
  400599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40059d:	50                   	push   %rax
  40059e:	54                   	push   %rsp
  40059f:	49 c7 c0 b0 07 40 00 	mov    $0x4007b0,%r8
  4005a6:	48 c7 c1 40 07 40 00 	mov    $0x400740,%rcx
  4005ad:	48 c7 c7 7d 06 40 00 	mov    $0x40067d,%rdi
  4005b4:	e8 c7 ff ff ff       	callq  400580 <__libc_start_main@plt>
  4005b9:	f4                   	hlt    
  4005ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005c0 <deregister_tm_clones>:
  4005c0:	b8 3f 10 60 00       	mov    $0x60103f,%eax
  4005c5:	55                   	push   %rbp
  4005c6:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  4005cc:	48 83 f8 0e          	cmp    $0xe,%rax
  4005d0:	48 89 e5             	mov    %rsp,%rbp
  4005d3:	77 02                	ja     4005d7 <deregister_tm_clones+0x17>
  4005d5:	5d                   	pop    %rbp
  4005d6:	c3                   	retq   
  4005d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005dc:	48 85 c0             	test   %rax,%rax
  4005df:	74 f4                	je     4005d5 <deregister_tm_clones+0x15>
  4005e1:	5d                   	pop    %rbp
  4005e2:	bf 38 10 60 00       	mov    $0x601038,%edi
  4005e7:	ff e0                	jmpq   *%rax
  4005e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005f0 <register_tm_clones>:
  4005f0:	b8 38 10 60 00       	mov    $0x601038,%eax
  4005f5:	55                   	push   %rbp
  4005f6:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  4005fc:	48 c1 f8 03          	sar    $0x3,%rax
  400600:	48 89 e5             	mov    %rsp,%rbp
  400603:	48 89 c2             	mov    %rax,%rdx
  400606:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40060a:	48 01 d0             	add    %rdx,%rax
  40060d:	48 d1 f8             	sar    %rax
  400610:	75 02                	jne    400614 <register_tm_clones+0x24>
  400612:	5d                   	pop    %rbp
  400613:	c3                   	retq   
  400614:	ba 00 00 00 00       	mov    $0x0,%edx
  400619:	48 85 d2             	test   %rdx,%rdx
  40061c:	74 f4                	je     400612 <register_tm_clones+0x22>
  40061e:	5d                   	pop    %rbp
  40061f:	48 89 c6             	mov    %rax,%rsi
  400622:	bf 38 10 60 00       	mov    $0x601038,%edi
  400627:	ff e2                	jmpq   *%rdx
  400629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400630 <__do_global_dtors_aux>:
  400630:	80 3d c1 0a 20 00 00 	cmpb   $0x0,0x200ac1(%rip)        # 6010f8 <completed.6972>
  400637:	75 11                	jne    40064a <__do_global_dtors_aux+0x1a>
  400639:	55                   	push   %rbp
  40063a:	48 89 e5             	mov    %rsp,%rbp
  40063d:	e8 7e ff ff ff       	callq  4005c0 <deregister_tm_clones>
  400642:	5d                   	pop    %rbp
  400643:	c6 05 ae 0a 20 00 01 	movb   $0x1,0x200aae(%rip)        # 6010f8 <completed.6972>
  40064a:	f3 c3                	repz retq 
  40064c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400650 <frame_dummy>:
  400650:	48 83 3d b8 07 20 00 	cmpq   $0x0,0x2007b8(%rip)        # 600e10 <__JCR_END__>
  400657:	00 
  400658:	74 1e                	je     400678 <frame_dummy+0x28>
  40065a:	b8 00 00 00 00       	mov    $0x0,%eax
  40065f:	48 85 c0             	test   %rax,%rax
  400662:	74 14                	je     400678 <frame_dummy+0x28>
  400664:	55                   	push   %rbp
  400665:	bf 10 0e 60 00       	mov    $0x600e10,%edi
  40066a:	48 89 e5             	mov    %rsp,%rbp
  40066d:	ff d0                	callq  *%rax
  40066f:	5d                   	pop    %rbp
  400670:	e9 7b ff ff ff       	jmpq   4005f0 <register_tm_clones>
  400675:	0f 1f 00             	nopl   (%rax)
  400678:	e9 73 ff ff ff       	jmpq   4005f0 <register_tm_clones>

000000000040067d <main>:
		static_cast<Window>(*this).onResize();
	}
};

int main()
{
  40067d:	55                   	push   %rbp
  40067e:	48 89 e5             	mov    %rsp,%rbp
  400681:	48 83 ec 10          	sub    $0x10,%rsp
	SpecialWindow win;
  400685:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400689:	48 89 c7             	mov    %rax,%rdi
  40068c:	e8 7b 00 00 00       	callq  40070c <_ZN13SpecialWindowC1Ev>
	win.onResize();	
  400691:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400695:	48 89 c7             	mov    %rax,%rdi
  400698:	e8 2b 00 00 00       	callq  4006c8 <_ZN13SpecialWindow8onResizeEv>
}
  40069d:	b8 00 00 00 00       	mov    $0x0,%eax
  4006a2:	c9                   	leaveq 
  4006a3:	c3                   	retq   

00000000004006a4 <_ZN6Window8onResizeEv>:
*/
#include <stdio.h>

class Window {
public:
	virtual void onResize() { }
  4006a4:	55                   	push   %rbp
  4006a5:	48 89 e5             	mov    %rsp,%rbp
  4006a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006ac:	5d                   	pop    %rbp
  4006ad:	c3                   	retq   

00000000004006ae <_ZN6WindowC1ERKS_>:
/*
	test static cast copy
*/
#include <stdio.h>

class Window {
  4006ae:	55                   	push   %rbp
  4006af:	48 89 e5             	mov    %rsp,%rbp
  4006b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4006ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006be:	48 c7 00 00 08 40 00 	movq   $0x400800,(%rax)
  4006c5:	5d                   	pop    %rbp
  4006c6:	c3                   	retq   
  4006c7:	90                   	nop

00000000004006c8 <_ZN13SpecialWindow8onResizeEv>:
	virtual void onResize() { }
};

class SpecialWindow: public Window {
public:
	virtual void onResize() {
  4006c8:	55                   	push   %rbp
  4006c9:	48 89 e5             	mov    %rsp,%rbp
  4006cc:	48 83 ec 20          	sub    $0x20,%rsp
  4006d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
		static_cast<Window>(*this).onResize();
  4006d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4006d8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4006dc:	48 89 d6             	mov    %rdx,%rsi
  4006df:	48 89 c7             	mov    %rax,%rdi
  4006e2:	e8 c7 ff ff ff       	callq  4006ae <_ZN6WindowC1ERKS_>
  4006e7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4006eb:	48 89 c7             	mov    %rax,%rdi
  4006ee:	e8 b1 ff ff ff       	callq  4006a4 <_ZN6Window8onResizeEv>
	}
  4006f3:	c9                   	leaveq 
  4006f4:	c3                   	retq   
  4006f5:	90                   	nop

00000000004006f6 <_ZN6WindowC1Ev>:
/*
	test static cast copy
*/
#include <stdio.h>

class Window {
  4006f6:	55                   	push   %rbp
  4006f7:	48 89 e5             	mov    %rsp,%rbp
  4006fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4006fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400702:	48 c7 00 00 08 40 00 	movq   $0x400800,(%rax)
  400709:	5d                   	pop    %rbp
  40070a:	c3                   	retq   
  40070b:	90                   	nop

000000000040070c <_ZN13SpecialWindowC1Ev>:
public:
	virtual void onResize() { }
};

class SpecialWindow: public Window {
  40070c:	55                   	push   %rbp
  40070d:	48 89 e5             	mov    %rsp,%rbp
  400710:	48 83 ec 10          	sub    $0x10,%rsp
  400714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40071c:	48 89 c7             	mov    %rax,%rdi
  40071f:	e8 d2 ff ff ff       	callq  4006f6 <_ZN6WindowC1Ev>
  400724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400728:	48 c7 00 e0 07 40 00 	movq   $0x4007e0,(%rax)
  40072f:	c9                   	leaveq 
  400730:	c3                   	retq   
  400731:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400738:	00 00 00 
  40073b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400740 <__libc_csu_init>:
  400740:	41 57                	push   %r15
  400742:	41 89 ff             	mov    %edi,%r15d
  400745:	41 56                	push   %r14
  400747:	49 89 f6             	mov    %rsi,%r14
  40074a:	41 55                	push   %r13
  40074c:	49 89 d5             	mov    %rdx,%r13
  40074f:	41 54                	push   %r12
  400751:	4c 8d 25 a8 06 20 00 	lea    0x2006a8(%rip),%r12        # 600e00 <__frame_dummy_init_array_entry>
  400758:	55                   	push   %rbp
  400759:	48 8d 2d a8 06 20 00 	lea    0x2006a8(%rip),%rbp        # 600e08 <__init_array_end>
  400760:	53                   	push   %rbx
  400761:	4c 29 e5             	sub    %r12,%rbp
  400764:	31 db                	xor    %ebx,%ebx
  400766:	48 c1 fd 03          	sar    $0x3,%rbp
  40076a:	48 83 ec 08          	sub    $0x8,%rsp
  40076e:	e8 c5 fd ff ff       	callq  400538 <_init>
  400773:	48 85 ed             	test   %rbp,%rbp
  400776:	74 1e                	je     400796 <__libc_csu_init+0x56>
  400778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40077f:	00 
  400780:	4c 89 ea             	mov    %r13,%rdx
  400783:	4c 89 f6             	mov    %r14,%rsi
  400786:	44 89 ff             	mov    %r15d,%edi
  400789:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40078d:	48 83 c3 01          	add    $0x1,%rbx
  400791:	48 39 eb             	cmp    %rbp,%rbx
  400794:	75 ea                	jne    400780 <__libc_csu_init+0x40>
  400796:	48 83 c4 08          	add    $0x8,%rsp
  40079a:	5b                   	pop    %rbx
  40079b:	5d                   	pop    %rbp
  40079c:	41 5c                	pop    %r12
  40079e:	41 5d                	pop    %r13
  4007a0:	41 5e                	pop    %r14
  4007a2:	41 5f                	pop    %r15
  4007a4:	c3                   	retq   
  4007a5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4007ac:	00 00 00 00 

00000000004007b0 <__libc_csu_fini>:
  4007b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004007b4 <_fini>:
  4007b4:	48 83 ec 08          	sub    $0x8,%rsp
  4007b8:	48 83 c4 08          	add    $0x8,%rsp
  4007bc:	c3                   	retq   
